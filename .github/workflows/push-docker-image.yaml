# This workflow uses actions that are not certified by GitHub.
# Estas las proporcionan entidades terceras y las gobiernan
# condiciones de servicio, políticas de privacidad y documentación de soporte
# documentación.

name: Create and publish a Docker image

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  Testing:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    needs:
    - build-and-push-image

    steps:
      - name: Unit tests
        run: echo "tests OK"
      - name: Integration testing
        run: echo "tests OK"
      - name: Quality tests
        run: echo "tests OK"

  deploy:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write
    needs:
    - Testing

    steps:
      - name: Get short SHA
        if: ${{ github.event_name == 'push' }}
        id: short
        run: echo "::set-output name=sha7::$(echo ${{ github.sha }} | cut -c1-7)"
      - name: Apply Kubernetes
        run: kubectl apply -f config/
      - name: deploy to k8s
        run: |
          kubectl set env deployment/test-api GIT_SHA=${{steps.short.outputs.sha7}}
